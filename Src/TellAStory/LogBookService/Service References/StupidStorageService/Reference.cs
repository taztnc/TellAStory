//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LogBookService.StupidStorageService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StupidStorageService.IStorageService")]
    public interface IStorageService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageService/ReadBinaryResource", ReplyAction="http://tempuri.org/IStorageService/ReadBinaryResourceResponse")]
        byte[] ReadBinaryResource(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageService/ReadTextResource", ReplyAction="http://tempuri.org/IStorageService/ReadTextResourceResponse")]
        string ReadTextResource(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageService/WriteBinaryResource", ReplyAction="http://tempuri.org/IStorageService/WriteBinaryResourceResponse")]
        void WriteBinaryResource(string id, byte[] toWrite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageService/WriteTextResource", ReplyAction="http://tempuri.org/IStorageService/WriteTextResourceResponse")]
        void WriteTextResource(string id, string toWrite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageService/AppendTextResource", ReplyAction="http://tempuri.org/IStorageService/AppendTextResourceResponse")]
        void AppendTextResource(string id, string toWrite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageService/ClearTextResource", ReplyAction="http://tempuri.org/IStorageService/ClearTextResourceResponse")]
        void ClearTextResource(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageService/DeleteResource", ReplyAction="http://tempuri.org/IStorageService/DeleteResourceResponse")]
        void DeleteResource(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStorageServiceChannel : StupidStorageService.IStorageService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StorageServiceClient : System.ServiceModel.ClientBase<StupidStorageService.IStorageService>, StupidStorageService.IStorageService {
        
        public StorageServiceClient() {
        }
        
        public StorageServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StorageServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StorageServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StorageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public byte[] ReadBinaryResource(string id) {
            return base.Channel.ReadBinaryResource(id);
        }
        
        public string ReadTextResource(string id) {
            return base.Channel.ReadTextResource(id);
        }
        
        public void WriteBinaryResource(string id, byte[] toWrite) {
            base.Channel.WriteBinaryResource(id, toWrite);
        }
        
        public void WriteTextResource(string id, string toWrite) {
            base.Channel.WriteTextResource(id, toWrite);
        }
        
        public void AppendTextResource(string id, string toWrite) {
            base.Channel.AppendTextResource(id, toWrite);
        }
        
        public void ClearTextResource(string id) {
            base.Channel.ClearTextResource(id);
        }
        
        public void DeleteResource(string id) {
            base.Channel.DeleteResource(id);
        }
    }
}
